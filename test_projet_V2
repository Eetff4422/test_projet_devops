def telechargerPhotosMaison() {
    return ["photo1.jpg", "photo2.jpg", "photo3.jpg"]
}

def planifierEvenement(nom, date, invites) {
    println("Évènement planifié : $nom le $date avec les invités : $invites")
}

def partagerPhotos(album, personnes) {
    println("Photos de l'album $album partagées avec : $personnes")
}

def rechercherConcerts(ville, mois) {
    return ["Concert1", "Concert2", "Concert3"]
}

def acheterBillets(concert) {
    println("Billets achetés pour le concert : $concert")
    return ["Billet1", "Billet2"]
}

def rechercherSpotsCamping(plage, date) {
    return ["Spot1", "Spot2", "Spot3"]
}

def rechercherIdeesVoyage(continent) {
    return ["Idée1", "Idée2", "Idée3"]
}

def genererApercu3D(photos, meubles) {
    println("Aperçu 3D généré à partir de photos et meubles")
    return "Apercu3D"
}

def enregistrerApercu(apercu) {
    println("Aperçu enregistré : $apercu")
}

def definirObjectifsSante() {
    return [sport: 2, meditation: 15]
}

def trackerActivites(objectifs) {
    return [sport: 1, meditation: 7] // Valeurs fictives, assurez-vous de fournir des données réelles
}

def verifierObjectifs(objectifs, activites) {
    println("Vérification des objectifs atteints")
    return true
}

def envoyerMessagePositif(personne) {
    println("Message positif envoyé à : $personne")
}

def genererEntreeJournal(nom) {
    return [titre: "Journal de $nom", texte: "Texte de l'entrée du journal"]
}

def enregistrerDonnees(donnees) {
    println("Données enregistrées en base de données : $donnees")
}

def envoyerNotification(message) {
    println("Notification envoyée : $message")
}

def selectionnerMeubles() {
    return ["Canapé", "Table", "Chaise"]
}

def recupererPersonne() {
    return "Personne1"
}

def albumVacances() {
    return "AlbumVacances"
}

def consulterMeteo(plage, date) {
    return "Météo ensoleillée"
}

def planifierItineraire(ideeVoyage) {
    println("Itinéraire planifié pour l'idée de voyage : $ideeVoyage")
    return "ItinérairePlanifié"
}

def trouverTutoriels(instrument) {
    return ["Tuto1", "Tuto2", "Tuto3"]
}

def jouerTutoriel(tuto) {
    println("Tutoriel joué : $tuto")
}

def enregistrerPerformance(morceau) {
    println("Performance enregistrée pour le morceau : $morceau")
}

def lancerMeditationGuidee(duree) {
    println("Méditation guidée lancée pour une durée de $duree minutes")
}

def inscrireMarathon() {
    return "Inscription au marathon réussie"
}

def prendreCoursSalsa() {
    return "Cours de salsa commencés"
}

def apprendreCrochet() {
    return "Cours de crochet commencés"
}

def faireVoyageFamille() {
    return "Voyage en famille planifié"
}

def prendreCoursEchecs() {
    return "Cours d'échecs commencés"
}

def etudierDevOps() {
    return "Cours de DevOps étudié avec succès"
}

def moisJanvier(params, objectifs, activites) {
    genererEntreeJournal("${params.NOM}").with {
        enregistrerDonnees(it)
        envoyerNotification("Nouvelle entrée pour ${params.NOM}")
    }
}

def moisFevrier(params, objectifs, activites) {
    selectionnerMeubles().with {
        def photos = telechargerPhotosMaison()
        genererApercu3D(photos, this).with {
            enregistrerApercu(it)
        }
    }
}

def moisMars(params, objectifs, activites) {
    verifierObjectifs(objectifs, activites)
}

def moisAvril(params, objectifs, activites) {
    recupererPersonne().with {
        envoyerMessagePositif(it)
    }
}

def moisMai(params, objectifs, activites) {
    [inscrireMarathon(), prendreCoursSalsa(), apprendreCrochet(), faireVoyageFamille(), prendreCoursEchecs()].each {
        envoyerNotification("Nouvelle activité pour ${params.NOM} en Mai : $it")
    }
    if (calculerPourcentageRealisation(objectifs, activites) < 50) {
        ajusterObjectifs(objectifs)
    }
}

def moisJuin(params, objectifs, activites) {
    planifierEvenement("Pique-nique", "12/06/2023", ["Maman", "Papa"])
    partagerPhotos(albumVacances(), ["Mamie", "Papi"])
}

def moisJuillet(params, objectifs, activites) {
    acheterBillets(rechercherConcerts("Paris", "Juillet")[0]).with {
        envoyerNotification("Billets achetés pour le concert : $it")
    }
}

def moisAout(params, objectifs, activites) {
    [rechercherSpotsCamping("Plage du Prado", "15/08/2023"), consulterMeteo("Plage du Prado", "15/08/2023")].each {
        // Traiter les résultats si nécessaire
    }
}

def moisSeptembre(params, objectifs, activites) {
    planifierItineraire(rechercherIdeesVoyage("Asie")[0])
}

def moisOctobre(params, objectifs, activites) {
    envoyerNotification("Étude en Octobre pour ${params.NOM} : ${etudierDevOps()}")
    if (calculerPourcentageRealisation(objectifs, activites) < 50) {
        ajusterObjectifs(objectifs)
    }
}

def moisNovembre(params, objectifs, activites) {
    jouerTutoriel(trouverTutoriels("Guitare")[0])
    enregistrerPerformance("Morceau 1")
}

def moisDecembre(params, objectifs, activites) {
    lancerMeditationGuidee(10)
    // Ajouter d'autres étapes pour le mois de Décembre si nécessaire
}

pipeline {
    agent any

    parameters {
        string(name: 'MOIS', defaultValue: 'Janvier', choices:['Janvier','Février','Mars','Avril','Mai','Juin','Juillet','Aout','Septembre','Octobre','Novembre','Décembre'], description: 'Mois à exécuter')
        string(name: 'NOM', defaultValue: 'Jean', description: 'Entrez votre nom')
        choice(name: 'JOUR', choices:['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31'], description: 'Sélectionner un jour')
    }

    stages {
        // stage('Réaliser les souhaits') {
        //     steps {
        //         script {
        //             def mois = params.MOIS
        //             def objectifs = definirObjectifsSante()
        //             def activites = trackerActivites(objectifs)
                    
                    

        //             // Appeler la fonction correspondante au mois
        //             this."mois${mois}"(params, objectifs, activites)
        //         }
        //     }
        // }
        stage('Janvier'){
            steps {
                script {

                if (params.MOIS == 'Janvier') {

                    if (params.JOUR == '1') {
                    
                    // Initialiser le suivi
                    def objectifs = [
                        "ecrireJournal" : 31, // nb jours objetif
                        "lireLivre": 1  // nb livres objectif
                    ]
                    
                    def progression = [
                        "ecrireJournal": 0, 
                        "lireLivre": 0
                    ]
                    
                    }
                    
                    // Calculer progression en fonction du jour
                    def jourActuel = params.JOUR.toInteger()
                    
                    progression.ecrireJournal = jourActuel 
                    if (jourActuel >= 10) { 
                    progression.lireLivre = 1 
                    }
                    
                    // Afficher progression    
                    println "Progression au $jourActuel janvier : $progression"
                    
                    // Appeler fonction mois
                    moisJanvier(params, objectifs, progression)
                    
                }

            }
            }
        }
    }
}

def calculerPourcentageRealisation(objectifs, activites) {
    def totalObjectifs = objectifs.values().sum()
    def totalActivites = activites.values().sum()

    return (totalObjectifs == 0) ? 0 : (totalActivites / totalObjectifs) * 100
}

def ajusterObjectifs(objectifs) {
    def nouveauxObjectifs = [:]
    objectifs.each { k, v -> nouveauxObjectifs[k] = v / 2 }
    objectifs.clear()
    objectifs.putAll(nouveauxObjectifs)
    envoyerNotification("Les objectifs ont été ajustés à mi-parcours.")
}
